% function to perform preliminary simulation to obtain suitable ICs for
% main simulation

function [Prelim, Prelim_ICs] = Get_ICs(para)

nages = zeros(para.n,1);
% Define trivial initial conditions as a structure
ICs = struct('S',(1-para.E0).*para.N, 'E1',para.E0.*para.N, 'E2',nages, 'E3',nages, 'IA1',nages, ...
             'IA2',nages, 'IA3',nages, 'IS1',nages, 'IS2',nages, 'IS3',nages, 'IPH1',nages, 'IPH2',nages, ...
             'IPH3',nages, 'IH',nages, 'R1',nages, 'R2',nages, 'R3',nages, 'Cases',nages, 'Hosp',nages, 'V',nages);

% Preliminary run
[Prelim] = ODEmodel(para,ICs);

% Obtain final conditions to begin main simulation
Prelim_ICs = struct('S',Prelim.S(end,:), 'E1',Prelim.E1(end,:), 'E2',Prelim.E2(end,:), 'E3',Prelim.E3(end,:), ...
                    'IA1',Prelim.IA1(end,:), 'IA2',Prelim.IA2(end,:), 'IA3',Prelim.IA3(end,:), ...
                    'IS1',Prelim.IS1(end,:), 'IS2',Prelim.IS2(end,:), 'IS3',Prelim.IS3(end,:), ...
                    'IPH1',Prelim.IPH1(end,:), 'IPH2',Prelim.IPH2(end,:), 'IPH3',Prelim.IPH3(end,:), ...
                    'IH',Prelim.IH(end,:), 'R1',Prelim.R1(end,:), 'R2',Prelim.R2(end,:), 'R3',Prelim.R3(end,:), ...
                    'Cases',Prelim.Cases(end,:), 'Hosp',Prelim.Hosp(end,:), 'V',Prelim.V(end,:));

